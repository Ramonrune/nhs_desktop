/*
 * Direitos reservados a Ramon Lacava Gutierrez Gon√ßales
 * ramonrune@gmail.com
 */
package com.healthsystem.physician;

import com.healthsystem.user.UserDAO;
import com.healthsystem.user.UserModel;
import com.healthsystem.user.physician.PhysicianDAO;
import com.healthsystem.util.Criptography;
import com.healthsystem.util.DocumentValidator;
import com.healthsystem.util.EmailManager;
import com.healthsystem.util.PasswordGenerator;
import com.healthsystem.util.ViewConfigurable;
import com.healthsystem.util.WindowManager;
import com.healthsystem.util.dataprovider.CountryList;
import com.healthsystem.util.dataprovider.CountryModel;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Usuario
 */
public class AddNewPatientWindow extends javax.swing.JDialog implements ViewConfigurable {

    private java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/healthsystem/physician/Bundle"); // NOI18N

    private PhysicianPanel physicianPanel;

    /**
     * Creates new form AddNewPatientWindow
     */
    public AddNewPatientWindow(PhysicianPanel physicianPanel) {
        this.physicianPanel = physicianPanel;
        setResizable(false);

        initComponents();
        passwordLabel.setVisible(false);
        passwordPasswordField.setVisible(false);

        setLocationRelativeTo(null);
        countryComboBox.setModel(new DefaultComboBoxModel(CountryList.listOnlyCountries().toArray()));
        countryComboBox.setSelectedIndex(CountryList.index());

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                System.out.println("fechando");
                NFCReaderNewSensor.close();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        userRegister = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        searchUserButton = new javax.swing.JButton();
        countryComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        identityDocumentTextField = new javax.swing.JFormattedTextField();
        continueButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordPasswordField = new javax.swing.JPasswordField();
        passwordInfoLabel = new javax.swing.JLabel();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/healthsystem/physician/Bundle"); // NOI18N
        setTitle(bundle.getString("AddNewPatientWindow.title")); // NOI18N
        setMaximumSize(new java.awt.Dimension(400, 350));
        setMinimumSize(new java.awt.Dimension(400, 350));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(400, 350));
        jPanel1.setMinimumSize(new java.awt.Dimension(400, 350));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 350));

        userRegister.setBackground(new java.awt.Color(255, 255, 255));
        userRegister.setMaximumSize(new java.awt.Dimension(400, 350));
        userRegister.setMinimumSize(new java.awt.Dimension(400, 350));
        userRegister.setPreferredSize(new java.awt.Dimension(400, 350));
        userRegister.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText(bundle.getString("AddNewPatientWindow.jLabel1.text")); // NOI18N
        userRegister.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, -1));

        emailTextField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        emailTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                emailTextFieldKeyPressed(evt);
            }
        });
        userRegister.add(emailTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 334, 33));

        searchUserButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png"))); // NOI18N
        searchUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchUserButtonActionPerformed(evt);
            }
        });
        userRegister.add(searchUserButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, 36, -1));

        countryComboBox.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        countryComboBox.setEnabled(false);
        countryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryComboBoxActionPerformed(evt);
            }
        });
        userRegister.add(countryComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, 376, 33));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText(bundle.getString("AddNewPatientWindow.jLabel4.text")); // NOI18N
        userRegister.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText(bundle.getString("AddNewPatientWindow.jLabel5.text")); // NOI18N
        userRegister.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, -1, -1));

        identityDocumentTextField.setEnabled(false);
        identityDocumentTextField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        identityDocumentTextField.setMaximumSize(new java.awt.Dimension(6, 21));
        userRegister.add(identityDocumentTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, 376, 33));

        continueButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/success.png"))); // NOI18N
        continueButton.setEnabled(false);
        continueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueButtonActionPerformed(evt);
            }
        });
        userRegister.add(continueButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 330, 46, 40));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText(bundle.getString("AddNewPatientWindow.jLabel2.text")); // NOI18N
        userRegister.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        nameTextField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        nameTextField.setText(bundle.getString("AddNewPatientWindow.nameTextField.text")); // NOI18N
        nameTextField.setEnabled(false);
        userRegister.add(nameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 376, 33));

        passwordLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        passwordLabel.setText(bundle.getString("AddNewPatientWindow.passwordLabel.text")); // NOI18N
        userRegister.add(passwordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, -1, -1));

        passwordPasswordField.setText(bundle.getString("AddNewPatientWindow.passwordPasswordField.text")); // NOI18N
        passwordPasswordField.setMaximumSize(new java.awt.Dimension(6, 21));
        passwordPasswordField.setMinimumSize(new java.awt.Dimension(6, 21));
        passwordPasswordField.setPreferredSize(new java.awt.Dimension(6, 21));
        userRegister.add(passwordPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 376, 35));

        passwordInfoLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        passwordInfoLabel.setText(bundle.getString("AddNewPatientWindow.passwordInfoLabel.text")); // NOI18N
        userRegister.add(passwordInfoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 280, 460, 50));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userRegister, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userRegister, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private UserDAO userDAO = new UserDAO();
    private UserModel userByLogin;

    private void searchUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchUserButtonActionPerformed

        UserModel userByLogin = userDAO.getUserByLogin(emailTextField.getText());
        this.userByLogin = userByLogin;
        if (userByLogin != null) {

            setVisible(false);
            JOptionPane.showMessageDialog(null, i18nPhysician.getString("AddNewPatientWindow.userAlreadyExists"));
            dispose();
            /*
            emailTextField.setEnabled(false);
            nameTextField.setText(userByLogin.getName());
            nameTextField.setEnabled(false);
            for (CountryModel country : CountryList.listOnlyCountries()) {
                if (country.getCode().equals(userByLogin.getCountry())) {
                    countryComboBox.setSelectedItem(country);
                }
            }

            countryComboBox.setEnabled(false);

            identityDocumentTextField.setText(userByLogin.getIdentityDocument());
            identityDocumentTextField.setEnabled(false);
            continueButton.setEnabled(true);
            passwordLabel.setVisible(true);
            passwordInfoLabel.setVisible(false);
            passwordPasswordField.setVisible(true);
*/

        } else {
            emailTextField.setEnabled(true);
            nameTextField.setEnabled(true);
            countryComboBox.setEnabled(true);
            identityDocumentTextField.setEnabled(true);
            continueButton.setEnabled(true);
            passwordLabel.setVisible(false);
            passwordInfoLabel.setVisible(true);
            passwordPasswordField.setVisible(false);

        }

    }//GEN-LAST:event_searchUserButtonActionPerformed
    private java.util.ResourceBundle i18n = java.util.ResourceBundle.getBundle("com/healthsystem/user/Bundle"); // NOI18N
    private java.util.ResourceBundle i18nPhysician = java.util.ResourceBundle.getBundle("com/healthsystem/physician/Bundle"); // NOI18N

    private void continueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueButtonActionPerformed

        boolean success = true;

        if (success) {
            String login = emailTextField.getText();

            if (login.length() > 100) {
                JOptionPane.showMessageDialog(null, i18n.getString("UserAddWindow.validate.login"));
                success = false;
            }
        }

        if (success) {
            String login = emailTextField.getText();

            if (login.trim().equals("")) {
                JOptionPane.showMessageDialog(null, i18n.getString("UserAddWindow.validate.login.notnull"));
                success = false;
            }
        }
        if (success) {
            String login = emailTextField.getText();

            if (!EmailManager.isValidEmailAddress(login)) {
                JOptionPane.showMessageDialog(null, i18n.getString("UserAddWindow.validate.login.invalid"));
                success = false;
            }
        }

        if (success) {
            if (nameTextField.getText().trim().equals("")) {

                JOptionPane.showMessageDialog(null, i18n.getString("UserAddWindow.validate.name"));
                success = false;
            }

        }
        if (success) {
            String docIdentity = identityDocumentTextField.getText().replaceAll("\\D+", "");

            if (docIdentity.length() > 20) {
                JOptionPane.showMessageDialog(null, i18n.getString("UserAddWindow.validate.identityDocument"));
                success = false;
            }
        }

        if (success) {

            String docIdentity = identityDocumentTextField.getText().replaceAll("\\D+", "");

            String code = ((CountryModel) countryComboBox.getSelectedItem()).getCode();
            if (code.equals("BRA")) {

                if (!DocumentValidator.isCPF(docIdentity)) {
                    JOptionPane.showMessageDialog(null, i18n.getString("UserAddWindow.validate.identityDocument.invalid"));
                    success = false;
                }
            }

            if (code.equals("FS")) {
                if (docIdentity.trim().length() != 13) {
                    JOptionPane.showMessageDialog(null, i18n.getString("UserAddWindow.validate.identityDocument.invalid.fs"));
                    success = false;
                }
            }
        }

        if (success) {

          /*  if (userByLogin != null) {
                success = userDAO.userCorrect(emailTextField.getText(), passwordPasswordField.getText());
            }
*/
            if (success) {
                NFCReaderRegisterPanel nfcReaderRegisterPanel = new NFCReaderRegisterPanel(this);
                nfcReaderRegisterPanel.setNewPatient(
                        nameTextField.getText(),
                        identityDocumentTextField.getText().replaceAll("\\D+", ""),
                        ((CountryModel) countryComboBox.getSelectedItem()).getCode(),
                        emailTextField.getText(),
                        userByLogin != null,
                        userByLogin != null ? userByLogin.getId() : "");
                WindowManager.changePanel(nfcReaderRegisterPanel, jPanel1);
            } else {
                JOptionPane.showMessageDialog(null, i18nLogin.getString("LoginScreen.notFound"));

            }

        }
    }//GEN-LAST:event_continueButtonActionPerformed

    private java.util.ResourceBundle i18nLogin = java.util.ResourceBundle.getBundle("com/healthsystem/Bundle"); // NOI18N

    private void countryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryComboBoxActionPerformed
        String code = ((CountryModel) countryComboBox.getSelectedItem()).getCode();

        identityDocumentTextField.setText("");
        identityDocumentTextField.setFocusLostBehavior(JFormattedTextField.PERSIST);

        if (code.equals("BRA")) {
            try {
                identityDocumentTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));

            } catch (java.text.ParseException ex) {
                ex.printStackTrace();
            }
        } else if (code.equals("FS")) {
            try {
                identityDocumentTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#############")));

            } catch (java.text.ParseException ex) {
                ex.printStackTrace();
            }
        } else {
            identityDocumentTextField.setText("");
            identityDocumentTextField.setFormatterFactory(null);
        }
    }//GEN-LAST:event_countryComboBoxActionPerformed

    private void emailTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailTextFieldKeyPressed

        nameTextField.setEnabled(false);
        nameTextField.setText("");
        countryComboBox.setEnabled(false);

        identityDocumentTextField.setEnabled(false);
        identityDocumentTextField.setText("");
        continueButton.setEnabled(false);

    }//GEN-LAST:event_emailTextFieldKeyPressed

    public JPanel getUserRegister() {
        return userRegister;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton continueButton;
    private javax.swing.JComboBox<String> countryComboBox;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JFormattedTextField identityDocumentTextField;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel passwordInfoLabel;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordPasswordField;
    private javax.swing.JButton searchUserButton;
    private javax.swing.JPanel userRegister;
    // End of variables declaration//GEN-END:variables
}
