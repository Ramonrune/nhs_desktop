/*
 * Direitos reservados a Ramon Lacava Gutierrez Gon√ßales
 * ramonrune@gmail.com
 */
package com.healthsystem.patient;

import com.healthsystem.healthinstitution.HealthInstitutionDAO;
import com.healthsystem.healthinstitution.HealthInstitutionModel;
import com.healthsystem.healthinstitution.HealthInstitutionSingleton;
import com.healthsystem.user.UserSingleton;
import com.healthsystem.user.nurse.NurseDAO;
import com.healthsystem.user.nurse.NurseWorksOnHealthInstitutionModel;
import com.healthsystem.util.ResizeUtil;
import com.healthsystem.util.WEBAPI;
import com.pusher.rest.Pusher;
import java.awt.image.BufferedImage;
import java.net.URL;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class NurseListToAddProcedureWindow extends javax.swing.JDialog {

    private java.util.ResourceBundle i18nPatient = java.util.ResourceBundle.getBundle("com/healthsystem/patient/Bundle"); // NOI18N

    /**
     * Creates new form NurseListToAddProcedureWindow
     */
    public NurseListToAddProcedureWindow() {
        setResizable(false);

        initComponents();
        setLocationRelativeTo(null);

        nurseTable.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            protected void setValue(Object value) {
                if (value instanceof ImageIcon) {
                    setIcon((ImageIcon) value);
                    setText("");
                } else {
                    setIcon(null);
                    super.setValue(value);
                }
            }
        });

        chargeNurse();
    }

    private HealthInstitutionDAO healthInstitutionDAO = new HealthInstitutionDAO();

    public void chargeNurse() {

        List<NurseWorksOnHealthInstitutionModel> nurses = healthInstitutionDAO.getNurses(HealthInstitutionSingleton.getInstance().getIdHealthInstitution());

        for (int i = 0; i <= nurseTable.getRowCount(); i++) {
            ((DefaultTableModel) nurseTable.getModel()).setNumRows(0);
        }
        nurseTable.updateUI();

        DefaultTableModel model = (DefaultTableModel) nurseTable.getModel();
        for (NurseWorksOnHealthInstitutionModel nurse : nurses) {

            System.out.println(nurse.getNurseType() + " ----");
            try {
                URL url = new URL(WEBAPI.IMAGE + "userhealth/" + nurse.getPhoto() + "?" + System.currentTimeMillis());

                System.out.println(url.toString());
                BufferedImage buff = ImageIO.read(url);
                BufferedImage resize = ResizeUtil.resize(buff, 40, 40);
                resize = ResizeUtil.circle(resize);

                model.addRow(new Object[]{
                    nurse.getIdUser(),
                    new ImageIcon(resize),
                    nurse.getName(),
                    nurse.getNurseType()

                });

            } catch (Exception e) {
                e.printStackTrace();

            }
        }

        nurseTable.removeColumn(nurseTable.getColumnModel().getColumn(0));
        nurseTable.setRowHeight(40);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        selectNursesButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        nurseTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/healthsystem/patient/Bundle"); // NOI18N
        setTitle(bundle.getString("NurseListToAddProcedureWindow.title")); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        selectNursesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/success.png"))); // NOI18N
        selectNursesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectNursesButtonActionPerformed(evt);
            }
        });

        nurseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                i18nPatient.getString("PatientPanel.nurseTable.title0"),
                i18nPatient.getString("PatientPanel.nurseTable.title1"),
                i18nPatient.getString("PatientPanel.nurseTable.title2"),
                i18nPatient.getString("PatientPanel.nurseTable.title3")    }

        ){
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(nurseTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(selectNursesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectNursesButton)
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectNursesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectNursesButtonActionPerformed

        Pusher pusher = new Pusher("556519", "6ba2a6129f4cf6d110a6", "5fc3f9d3786568a73222");
        pusher.setCluster("us2");
        pusher.setEncrypted(true);
        DefaultTableModel model = (DefaultTableModel) nurseTable.getModel();
        if (nurseTable.getRowCount() > 0) {
            if (nurseTable.getSelectedRowCount() > 0) {

                int selectedRow[] = nurseTable.getSelectedRows();
                for (int i : selectedRow) {
                    String id = nurseTable.getModel().getValueAt(i, 0).toString();
                    pusher.trigger(id + ";" + HealthInstitutionSingleton.getInstance().getIdHealthInstitution(), "notify-nurse-procedure", true);

                  
                }

                setVisible(false);
                JOptionPane.showMessageDialog(null, i18nPatient.getString("NurseListToAddProcedureWindow.addProcedureEvent"));
                
                dispose();


            }
        }
      
        

    }//GEN-LAST:event_selectNursesButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable nurseTable;
    private javax.swing.JButton selectNursesButton;
    // End of variables declaration//GEN-END:variables

    private String id;

    public void setData(String id) {
        this.id = id;
    }
}
