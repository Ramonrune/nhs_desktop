/*
 * Direitos reservados a Ramon Lacava Gutierrez Gonçales
 * ramonrune@gmail.com
 */
package com.healthsystem.patient;

import com.healthsystem.healthinstitution.*;
import com.healthsystem.user.nurse.NurseDAO;
import com.healthsystem.util.dataprovider.CountryList;
import com.healthsystem.util.dataprovider.CountryModel;
import com.healthsystem.util.DocumentValidator;
import com.healthsystem.util.ResizeUtil;
import com.healthsystem.util.ViewConfigurable;
import com.healthsystem.util.azure.AzureBlob;
import com.healthsystem.util.azure.ImageFilter;
import com.healthsystem.util.component.DrawPad;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;

/**
 * @author Ramon Lacava Gutierrez Gonçales
 * @version 1.0.0
 * @date 30/06/2018 19:33:20
 */
public class DiagnosisAddWindow extends JDialog implements ViewConfigurable {

    private java.util.ResourceBundle i18n = java.util.ResourceBundle.getBundle("com/healthsystem/patient/Bundle"); // NOI18N
    private PatientDAO patientDAO = new PatientDAO();
    private String patientId;
    private String physicianId;
    private PatientPanel patientPanel;

    public DiagnosisAddWindow(String patientId, String physicianId) {
        this.patientId = patientId;
        this.physicianId = physicianId;

        setResizable(false);

        initComponents();
        setLocationRelativeTo(null);
        fc = new JFileChooser();
        fc.setFileFilter(new ImageFilter());
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        diagnosisTextPane = new javax.swing.JEditorPane();
        drawPad = new com.healthsystem.util.component.DrawPad();
        signatureLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        diagnosisAddButton = new javax.swing.JButton();
        addPatientProceduresButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/healthsystem/patient/Bundle"); // NOI18N
        setTitle(bundle.getString("DiagnosisAddWindow.title")); // NOI18N
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        diagnosisTextPane.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(diagnosisTextPane);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 650, 312));

        drawPad.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(drawPad, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 650, 125));

        signatureLabel.setText(bundle.getString("DiagnosisAddWindow.signatureLabel.text")); // NOI18N
        jPanel1.add(signatureLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 650, 120));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText(bundle.getString("DiagnosisAddWindow.jLabel1.text")); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 372, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText(bundle.getString("DiagnosisAddWindow.jLabel2.text")); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        jButton1.setText(bundle.getString("DiagnosisAddWindow.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 524, 99, 41));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/upload.png"))); // NOI18N
        jButton2.setText(bundle.getString("DiagnosisAddWindow.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 524, 46, -1));

        diagnosisAddButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/success.png"))); // NOI18N
        diagnosisAddButton.setText(bundle.getString("DiagnosisAddWindow.diagnosisAddButton.text")); // NOI18N
        diagnosisAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagnosisAddButtonActionPerformed(evt);
            }
        });
        jPanel1.add(diagnosisAddButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 520, 50, -1));

        addPatientProceduresButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nurse.png"))); // NOI18N
        addPatientProceduresButton.setText(bundle.getString("DiagnosisAddWindow.addPatientProceduresButton.text")); // NOI18N
        addPatientProceduresButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientProceduresButtonActionPerformed(evt);
            }
        });
        jPanel1.add(addPatientProceduresButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(553, 520, 50, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 670, 580));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public PatientPanel getPatientPanel() {
        return patientPanel;
    }

    public void setPatientPanel(PatientPanel patientPanel) {
        this.patientPanel = patientPanel;
    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        drawPad.clear();
    }//GEN-LAST:event_jButton1ActionPerformed
    private JFileChooser fc;
    private BufferedImage uploadImage;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int returnVal = fc.showOpenDialog(null);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                BufferedImage read = ImageIO.read(file);
                uploadImage = ResizeUtil.resize(read, 650, 125);
                ImageIcon icon = new ImageIcon(uploadImage);
                drawPad.setVisible(false);
                drawPad.revalidate();
                drawPad.repaint();
                signatureLabel.setIcon(icon);
            } catch (IOException ex) {
                Logger.getLogger(HealthInstitutionAddWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void diagnosisAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagnosisAddButtonActionPerformed
        boolean success = true;

        if (diagnosisTextPane.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, i18n.getString("DiagnosisAddWindow.validate.diagnosis"));
            success = false;
        }

        if (uploadImage == null) {
            if (success) {
                if (!drawPad.isValid()) {
                    JOptionPane.showMessageDialog(null, i18n.getString("DiagnosisAddWindow.validate.signature"));
                    success = false;
                }
            }
        }

        if (success) {

            String id = UUID.randomUUID().toString();
            boolean ok = patientDAO.addDiagnosis(id, LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")),
                    diagnosisTextPane.getText(), patientId, physicianId, HealthInstitutionSingleton.getInstance().getIdHealthInstitution());

            if (ok) {
                AzureBlob.upload(uploadImage == null ? drawPad.generateBufferedImage() : uploadImage, id + ".jpg", "diagnosis");
                patientPanel.chargeDiagnosis();
                setVisible(false);
                JOptionPane.showMessageDialog(null, i18n.getString("DiagnosisAddWindow.success"));
                dispose();
            }
        }

    }//GEN-LAST:event_diagnosisAddButtonActionPerformed

    private void addPatientProceduresButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientProceduresButtonActionPerformed
         boolean success = true;

        if (diagnosisTextPane.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, i18n.getString("DiagnosisAddWindow.validate.diagnosis"));
            success = false;
        }

        if (uploadImage == null) {
            if (success) {
                if (!drawPad.isValid()) {
                    JOptionPane.showMessageDialog(null, i18n.getString("DiagnosisAddWindow.validate.signature"));
                    success = false;
                }
            }
        }

           if (success) {

            String id = UUID.randomUUID().toString();
            boolean ok = patientDAO.addDiagnosis(id, LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")),
                    diagnosisTextPane.getText(), patientId, physicianId, HealthInstitutionSingleton.getInstance().getIdHealthInstitution());

            if (ok) {
                AzureBlob.upload(uploadImage == null ? drawPad.generateBufferedImage() : uploadImage, id + ".jpg", "diagnosis");
                patientPanel.chargeDiagnosis();
                setVisible(false);

                new NurseDAO().addToWaitList(HealthInstitutionSingleton.getInstance().getIdHealthInstitution(), id);
                 
                dispose();
            }
        }
        
        
        
    }//GEN-LAST:event_addPatientProceduresButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPatientProceduresButton;
    private javax.swing.JButton diagnosisAddButton;
    private javax.swing.JEditorPane diagnosisTextPane;
    private com.healthsystem.util.component.DrawPad drawPad;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel signatureLabel;
    // End of variables declaration//GEN-END:variables

}
