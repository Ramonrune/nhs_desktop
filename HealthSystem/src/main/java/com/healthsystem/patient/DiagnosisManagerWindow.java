/*
 * Direitos reservados a Ramon Lacava Gutierrez Gonçales
 * ramonrune@gmail.com
 */
package com.healthsystem.patient;

import com.healthsystem.healthinstitution.*;
import com.healthsystem.user.UserSingleton;
import com.healthsystem.user.physician.PhysicianDAO;
import com.healthsystem.user.physician.PhysicianModel;
import com.healthsystem.user.specialization.SpecializationInterfaceModel;
import com.healthsystem.user.specialization.SpecializationModel;
import com.healthsystem.util.dataprovider.CountryList;
import com.healthsystem.util.dataprovider.CountryModel;
import com.healthsystem.util.DocumentValidator;
import com.healthsystem.util.ResizeUtil;
import com.healthsystem.util.ViewConfigurable;
import com.healthsystem.util.azure.AzureBlob;
import com.healthsystem.util.azure.ImageFilter;
import com.healthsystem.util.component.DrawPad;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.net.URLConnection;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Locale;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 * @author Ramon Lacava Gutierrez Gonçales
 * @version 1.0.0
 * @date 30/06/2018 19:33:20
 */
public class DiagnosisManagerWindow extends JDialog implements ViewConfigurable {

    private java.util.ResourceBundle i18n = java.util.ResourceBundle.getBundle("com/healthsystem/patient/Bundle"); // NOI18N

    public DiagnosisManagerWindow() {

        setResizable(false);

        initComponents();
        setLocationRelativeTo(null);

        updateDiagnosisButton.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        diagnosisTextPane = new javax.swing.JEditorPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        signatureLabel = new javax.swing.JLabel();
        updateDiagnosisButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        physicianPhoto = new javax.swing.JLabel();
        physicianNameTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        medicalRegisterTextField = new javax.swing.JTextField();
        jscrollPanelPhysician = new javax.swing.JScrollPane(specializationPanelPhysician);
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        browser = new com.healthsystem.util.component.Browser();
        jPanel4 = new javax.swing.JPanel();
        nursePhoto = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nurseNameTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        proceduresEditText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/healthsystem/patient/Bundle"); // NOI18N
        setTitle(bundle.getString("DiagnosisManagerWindow.title")); // NOI18N

        jTabbedPane1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        diagnosisTextPane.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        diagnosisTextPane.setEnabled(false);
        jScrollPane1.setViewportView(diagnosisTextPane);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText(bundle.getString("DiagnosisManagerWindow.jLabel1.text")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText(bundle.getString("DiagnosisManagerWindow.jLabel2.text")); // NOI18N

        signatureLabel.setText(bundle.getString("DiagnosisManagerWindow.signatureLabel.text")); // NOI18N
        signatureLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        updateDiagnosisButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/success.png"))); // NOI18N
        updateDiagnosisButton.setText(bundle.getString("DiagnosisManagerWindow.updateDiagnosisButton.text")); // NOI18N
        updateDiagnosisButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDiagnosisButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(signatureLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateDiagnosisButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signatureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateDiagnosisButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("DiagnosisManagerWindow.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        physicianPhoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/user_128_128.png"))); // NOI18N
        physicianPhoto.setText(bundle.getString("DiagnosisManagerWindow.physicianPhoto.text")); // NOI18N

        physicianNameTextField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        physicianNameTextField.setText(bundle.getString("DiagnosisManagerWindow.physicianNameTextField.text")); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText(bundle.getString("DiagnosisManagerWindow.jLabel4.text")); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText(bundle.getString("DiagnosisManagerWindow.jLabel5.text")); // NOI18N

        medicalRegisterTextField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        medicalRegisterTextField.setText(bundle.getString("DiagnosisManagerWindow.medicalRegisterTextField.text")); // NOI18N

        jscrollPanelPhysician.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText(bundle.getString("DiagnosisManagerWindow.jLabel6.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jscrollPanelPhysician)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(physicianPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(0, 417, Short.MAX_VALUE))
                            .addComponent(medicalRegisterTextField)
                            .addComponent(physicianNameTextField)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(physicianPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(physicianNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(medicalRegisterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(8, 8, 8)
                .addComponent(jscrollPanelPhysician, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(bundle.getString("DiagnosisManagerWindow.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(browser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(browser, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(bundle.getString("DiagnosisManagerWindow.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        nursePhoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/user_128_128.png"))); // NOI18N
        nursePhoto.setText(bundle.getString("DiagnosisManagerWindow.nursePhoto.text")); // NOI18N

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText(bundle.getString("DiagnosisManagerWindow.jLabel7.text")); // NOI18N

        nurseNameTextField.setText(bundle.getString("DiagnosisManagerWindow.nurseNameTextField.text")); // NOI18N

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText(bundle.getString("DiagnosisManagerWindow.jLabel8.text")); // NOI18N

        proceduresEditText.setColumns(20);
        proceduresEditText.setRows(5);
        jScrollPane2.setViewportView(proceduresEditText);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(nursePhoto)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 405, Short.MAX_VALUE))
                            .addComponent(nurseNameTextField)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nurseNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(nursePhoto)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(bundle.getString("DiagnosisManagerWindow.jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateDiagnosisButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDiagnosisButtonActionPerformed
        boolean ok = patientDAO.updateDiagnosis(diagnosisModel.getIdDiagnosis(), diagnosisTextPane.getText());
        if (ok) {
            patientPanel.chargeDiagnosis();
            setVisible(false);
            JOptionPane.showMessageDialog(null, i18n.getString("DiagnosisManagerWindow.success"));
            dispose();
        }

    }//GEN-LAST:event_updateDiagnosisButtonActionPerformed

    private PatientDAO patientDAO = new PatientDAO();
    private JPanel specializationPanelPhysician = new JPanel(new GridLayout(0, 2));
    private DiagnosisModel diagnosisModel;
    private PhysicianDAO physicianDAO = new PhysicianDAO();

    public DiagnosisModel getDiagnosisModel() {
        return diagnosisModel;
    }

    public void setDiagnosisModel(DiagnosisModel diagnosisModel) {
        this.diagnosisModel = diagnosisModel;

        diagnosisTextPane.setText(diagnosisModel.getAnnotation());
        try {

            BufferedImage img = AzureBlob.download(diagnosisModel.getIdDiagnosis() + ".jpg", "diagnosis");
            if (img != null) {
                signatureLabel.setIcon(new ImageIcon(img));

            }
        } catch (Exception ex) {

        }

        physicianNameTextField.setText(diagnosisModel.getPhysicianName());
        physicianNameTextField.setEnabled(false);

        medicalRegisterTextField.setText(diagnosisModel.getPhysicianPracticeNumber());
        medicalRegisterTextField.setEnabled(false);

        try {
            URL url = new URL("https://healthsystem.blob.core.windows.net/userhealth/" + diagnosisModel.getPhysicianPhoto() + "?" + String.valueOf(System.currentTimeMillis()));
            physicianPhoto.setIcon(new ImageIcon(url));

        } catch (Exception ex) {
            ex.printStackTrace();
            try {
                URL url = new URL("https://healthsystem.blob.core.windows.net/userhealth/USER_DEFAULT_PHOTO.jpg?" + String.valueOf(System.currentTimeMillis()));
                URLConnection con = url.openConnection();
                con.setUseCaches(false);

                InputStream is = url.openStream();
                physicianPhoto.setIcon(new ImageIcon(ImageIO.read(is)));

            } catch (Exception e) {
                e.printStackTrace();

            }

        }

        jscrollPanelPhysician.getVerticalScrollBar().setUnitIncrement(16);

        List<SpecializationModel> listSpecialization = physicianDAO.listSpecialization(diagnosisModel.getPhysicianCountry());
        List<SpecializationModel> listPhysicianSpecialization = physicianDAO.listPhysicianSpecialization(diagnosisModel.getIdPhysician());

        for (SpecializationModel specializationModel : listSpecialization) {

            JCheckBox jCheckBox = new JCheckBox(specializationModel.getName());

            if (listPhysicianSpecialization.contains(specializationModel)) {
                jCheckBox.setSelected(true);
                jCheckBox.setEnabled(false);

                specializationPanelPhysician.add(jCheckBox);
            }

        }
        specializationPanelPhysician.revalidate();
        specializationPanelPhysician.repaint();

        browser.run(String.valueOf(diagnosisModel.getHealthInstitutionLatitute()), String.valueOf(diagnosisModel.getHealthInstitutionLongitute()));

        DiagnosisProcedureModel diagnosisProcedure = patientDAO.getDiagnosisProcedure(diagnosisModel.getIdDiagnosis());

        if (diagnosisProcedure == null) {
            jPanel4.setVisible(false);
            jTabbedPane1.removeTabAt(jTabbedPane1.getTabCount() - 1);
        } else {
            nurseNameTextField.setText(diagnosisProcedure.getNurseName());
            nurseNameTextField.setEnabled(false);
            proceduresEditText.setText(diagnosisProcedure.getAnotation());
            proceduresEditText.setEnabled(false);

            try {
                URL url = new URL("https://healthsystem.blob.core.windows.net/userhealth/" + diagnosisProcedure.getNursePhoto() + "?" + String.valueOf(System.currentTimeMillis()));
                nursePhoto.setIcon(new ImageIcon(url));

            } catch (Exception ex) {
                ex.printStackTrace();
                try {
                    URL url = new URL("https://healthsystem.blob.core.windows.net/userhealth/USER_DEFAULT_PHOTO.jpg?" + String.valueOf(System.currentTimeMillis()));
                    URLConnection con = url.openConnection();
                    con.setUseCaches(false);

                    InputStream is = url.openStream();
                    nursePhoto.setIcon(new ImageIcon(ImageIO.read(is)));

                } catch (Exception e) {
                    e.printStackTrace();

                }

            }

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.healthsystem.util.component.Browser browser;
    private javax.swing.JEditorPane diagnosisTextPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JScrollPane jscrollPanelPhysician;
    private javax.swing.JTextField medicalRegisterTextField;
    private javax.swing.JTextField nurseNameTextField;
    private javax.swing.JLabel nursePhoto;
    private javax.swing.JTextField physicianNameTextField;
    private javax.swing.JLabel physicianPhoto;
    private javax.swing.JTextArea proceduresEditText;
    private javax.swing.JLabel signatureLabel;
    private javax.swing.JButton updateDiagnosisButton;
    // End of variables declaration//GEN-END:variables

    private PhysicianModel physicianModel;

    public void setPhysicianModel(PhysicianModel physicianModel) {
        this.physicianModel = physicianModel;

        if (!physicianModel.getIdPhysician().equals(diagnosisModel.getIdPhysician())) {
            updateDiagnosisButton.setEnabled(false);
            diagnosisTextPane.setEnabled(false);
        }

    }

    private PatientPanel patientPanel;

    public void setPatientPanel(PatientPanel patientPanel) {
        this.patientPanel = patientPanel;
    }

}
