/*
 * Direitos reservados a Ramon Lacava Gutierrez Gonçales
 * ramonrune@gmail.com
 */
package com.healthsystem.healthinstitution;

import com.healthsystem.util.dataprovider.CountryList;
import com.healthsystem.util.dataprovider.CountryModel;
import com.healthsystem.util.DocumentValidator;
import com.healthsystem.util.ResizeUtil;
import com.healthsystem.util.ViewConfigurable;
import com.healthsystem.util.azure.AzureBlob;
import com.healthsystem.util.azure.ImageFilter;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.Locale;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;

/**
 * @author Ramon Lacava Gutierrez Gonçales
 * @version 1.0.0
 * @date 30/06/2018 19:33:20
 */
public class HealthInstitutionAddWindow extends JDialog implements ViewConfigurable {

    private JFileChooser fc;
    private java.util.ResourceBundle i18n = java.util.ResourceBundle.getBundle("com/healthsystem/healthinstitution/Bundle"); // NOI18N

    /**
     * Cria um novo formulário HealthInstitutionAddWindow
     */
    public HealthInstitutionAddWindow() {

        setResizable(false);

        initComponents();
        setLocationRelativeTo(null);
        setTitle(i18n.getString("HealthInstitutionAddWindow.title"));

        countryComboBox.setModel(new DefaultComboBoxModel(CountryList.listOnlyCountries().toArray()));
        countryComboBox.setSelectedIndex(CountryList.index());
       
        fc = new JFileChooser();
        fc.setFileFilter(new ImageFilter());
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        healthInstitutionNameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        countryComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        stateTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cityTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        neighborhoodTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        streetTextField = new javax.swing.JTextField();
        numberTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        healthInstitutionPhoto = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        postalCodeTextField = new javax.swing.JFormattedTextField();
        identityDocumentTextField = new javax.swing.JFormattedTextField();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        telephoneTextField = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/healthsystem/healthinstitution/Bundle"); // NOI18N
        jLabel1.setText(bundle.getString("HealthInstitutionAddWindow.jLabel1.text")); // NOI18N

        healthInstitutionNameTextField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText(bundle.getString("HealthInstitutionAddWindow.jLabel2.text")); // NOI18N

        countryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText(bundle.getString("HealthInstitutionAddWindow.jLabel3.text")); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText(bundle.getString("HealthInstitutionAddWindow.jLabel4.text")); // NOI18N

        stateTextField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText(bundle.getString("HealthInstitutionAddWindow.jLabel5.text")); // NOI18N

        cityTextField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText(bundle.getString("HealthInstitutionAddWindow.jLabel6.text")); // NOI18N

        neighborhoodTextField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText(bundle.getString("HealthInstitutionAddWindow.jLabel7.text")); // NOI18N

        streetTextField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        numberTextField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText(bundle.getString("HealthInstitutionAddWindow.jLabel8.text")); // NOI18N

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setText(bundle.getString("HealthInstitutionAddWindow.jLabel9.text")); // NOI18N

        healthInstitutionPhoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hospital_big.png"))); // NOI18N
        healthInstitutionPhoto.setMaximumSize(new java.awt.Dimension(150, 150));
        healthInstitutionPhoto.setMinimumSize(new java.awt.Dimension(150, 150));
        healthInstitutionPhoto.setPreferredSize(new java.awt.Dimension(150, 150));

        jButton1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton1.setText(bundle.getString("HealthInstitutionAddWindow.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        try {
            postalCodeTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        postalCodeTextField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        postalCodeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                postalCodeTextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                postalCodeTextFieldKeyTyped(evt);
            }
        });

        try {
            identityDocumentTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        identityDocumentTextField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        identityDocumentTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                identityDocumentTextFieldActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/success.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel10.setText(bundle.getString("HealthInstitutionAddWindow.jLabel10.text")); // NOI18N

        try {
            telephoneTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        telephoneTextField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(healthInstitutionNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(countryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(66, 66, 66))
                                .addComponent(identityDocumentTextField)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel3)
                                        .addComponent(postalCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(stateTextField)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, Short.MAX_VALUE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(streetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(numberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addComponent(healthInstitutionPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel10)
                    .addComponent(telephoneTextField)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cityTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(neighborhoodTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(healthInstitutionPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(healthInstitutionNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(identityDocumentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(postalCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(neighborhoodTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(streetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(telephoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void countryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryComboBoxActionPerformed

        String code = ((CountryModel) countryComboBox.getSelectedItem()).getCode();

        identityDocumentTextField.setText("");
        postalCodeTextField.setText("");
        telephoneTextField.setText("");
        identityDocumentTextField.setFocusLostBehavior(JFormattedTextField.PERSIST);
        postalCodeTextField.setFocusLostBehavior(JFormattedTextField.PERSIST);
        telephoneTextField.setFocusLostBehavior(JFormattedTextField.PERSIST);

        if (code.equals("BRA")) {
            try {
                postalCodeTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
                identityDocumentTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
                telephoneTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));

            } catch (java.text.ParseException ex) {
                ex.printStackTrace();
            }
        } else if (code.equals("FS")) {
            try {
                postalCodeTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####")));
                identityDocumentTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####/######/##")));
                telephoneTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("### ### ####")));

            } catch (java.text.ParseException ex) {
                ex.printStackTrace();
            }
        } else {
            postalCodeTextField.setText("");
            identityDocumentTextField.setText("");
            telephoneTextField.setText("");
            postalCodeTextField.setFormatterFactory(null);
            identityDocumentTextField.setFormatterFactory(null);
            telephoneTextField.setFormatterFactory(null);

        }


    }//GEN-LAST:event_countryComboBoxActionPerformed

    private void postalCodeTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_postalCodeTextFieldKeyTyped

    }//GEN-LAST:event_postalCodeTextFieldKeyTyped

    private void postalCodeTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_postalCodeTextFieldKeyReleased
        String code = ((CountryModel) countryComboBox.getSelectedItem()).getCode();
        if (code.equals("BRA")) {

            String val = postalCodeTextField.getText().trim();

            System.out.println(val);
            if (val.length() == 9) {
                HealthInstitutionDAO.findAddress(val, stateTextField, streetTextField, neighborhoodTextField, cityTextField);
            }

        }
     }//GEN-LAST:event_postalCodeTextFieldKeyReleased

    private void identityDocumentTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_identityDocumentTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_identityDocumentTextFieldActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        boolean success = true;

        if (healthInstitutionNameTextField.getText().trim().equals("")) {

            JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.healthInstitutionName"));
            success = false;
        }

        if (success) {
            String docIdentity = identityDocumentTextField.getText().replaceAll("\\D+", "");

            if (docIdentity.length() > 20) {
                JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.identityDocument"));
                success = false;
            }
        }

        if (success) {

            String docIdentity = identityDocumentTextField.getText().replaceAll("\\D+", "");
            if (docIdentity.trim().equals("")) {
                JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.identityDocument.notnull"));

                success = false;
            }
        }

        if (success) {

            String docIdentity = identityDocumentTextField.getText().replaceAll("\\D+", "");

            String code = ((CountryModel) countryComboBox.getSelectedItem()).getCode();
            if (code.equals("BRA")) {

                if (!DocumentValidator.isCNPJ(docIdentity)) {
                    JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.identityDocument.invalid"));
                    success = false;
                }
            }
        }

        if (success) {
            String postalCode = postalCodeTextField.getText().replaceAll("\\D+", "");

            if (postalCode.length() > 8) {
                JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.postalCode"));
                success = false;
            }
        }

        if (success) {
            String state = stateTextField.getText();

            if (state.length() > 100) {
                JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.state"));
                success = false;
            }
        }

        if (success) {
            String state = stateTextField.getText();

            if (state.trim().equals("")) {
                JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.state.notnull"));
                success = false;
            }
        }

        if (success) {
            String city = cityTextField.getText();

            if (city.length() > 100) {
                JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.city"));
                success = false;
            }
        }

        if (success) {
            String city = cityTextField.getText();

            if (city.trim().equals("")) {
                JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.city.notnull"));
                success = false;
            }
        }

        if (success) {
            String neighborhood = neighborhoodTextField.getText();

            if (neighborhood.length() > 50) {
                JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.neighborhood"));
                success = false;
            }
        }

        if (success) {
            String neighborhood = neighborhoodTextField.getText();

            if (neighborhood.trim().equals("")) {
                JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.neighborhood.notnull"));
                success = false;
            }
        }

        if (success) {
            String street = streetTextField.getText();

            if (street.length() > 100) {
                JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.street"));
                success = false;
            }
        }

        if (success) {
            String street = streetTextField.getText();

            if (street.trim().equals("")) {
                JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.street.notnull"));
                success = false;
            }
        }

        if (success) {
            String number = numberTextField.getText();

            if (number.length() > 10) {
                JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.number"));
                success = false;
            }
        }

        if (success) {
            String number = numberTextField.getText();

            if (number.trim().equals("")) {
                JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.number.notnull"));
                success = false;
            }
        }

        if (success) {
            String telephone = telephoneTextField.getText();

            if (telephone.length() > 20) {
                JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.telephone"));
                success = false;
            }
        }

        if (success) {
            String photo = UUID.randomUUID() + ".jpg";
            if (uploadImage == null) {
                photo = "HEALTH.jpg";
            }
            boolean ok = healthInstitutionPanel.getHealthInstitutionDAO().add(
                    healthInstitutionNameTextField.getText(),
                    identityDocumentTextField.getText().replaceAll("\\D+", ""),
                    ((CountryModel) countryComboBox.getSelectedItem()).getCode(),
                    postalCodeTextField.getText().replaceAll("\\D+", ""),
                    stateTextField.getText(),
                    cityTextField.getText(),
                    neighborhoodTextField.getText(),
                    streetTextField.getText(),
                    numberTextField.getText(),
                    photo,
                    telephoneTextField.getText().replaceAll("\\D+", "")
            );

            if (ok) {

                if (uploadImage != null) {
                    AzureBlob.upload(uploadImage, photo, "healthinstitution");

                }

                setVisible(false);
                healthInstitutionPanel.populateData(1, 20);
                healthInstitutionPanel.resetCount();
                JOptionPane.showMessageDialog(null, i18n.getString("HealthInstitutionAddWindow.validate.success"));

                dispose();

            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int returnVal = fc.showOpenDialog(null);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                BufferedImage read = ImageIO.read(file);
                uploadImage = ResizeUtil.resize(read, 150, 150);
                ImageIcon icon = new ImageIcon(uploadImage);

                healthInstitutionPhoto.setIcon(icon);
            } catch (IOException ex) {
                Logger.getLogger(HealthInstitutionAddWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private BufferedImage uploadImage;
    private HealthInstitutionPanel healthInstitutionPanel;

    protected void setHealthInstitutionPanel(HealthInstitutionPanel healthInstitutionPanel) {
        this.healthInstitutionPanel = healthInstitutionPanel;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HealthInstitutionAddWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HealthInstitutionAddWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HealthInstitutionAddWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HealthInstitutionAddWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HealthInstitutionAddWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cityTextField;
    private javax.swing.JComboBox<String> countryComboBox;
    private javax.swing.JTextField healthInstitutionNameTextField;
    private javax.swing.JLabel healthInstitutionPhoto;
    private javax.swing.JFormattedTextField identityDocumentTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField neighborhoodTextField;
    private javax.swing.JTextField numberTextField;
    private javax.swing.JFormattedTextField postalCodeTextField;
    private javax.swing.JTextField stateTextField;
    private javax.swing.JTextField streetTextField;
    private javax.swing.JFormattedTextField telephoneTextField;
    // End of variables declaration//GEN-END:variables

}
