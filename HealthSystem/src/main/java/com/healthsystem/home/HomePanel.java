/*
 * Direitos reservados a Ramon Lacava Gutierrez GonÃ§ales
 * ramonrune@gmail.com
 */
package com.healthsystem.home;

import com.healthsystem.healthinstitution.HealthInstitutionModel;
import com.healthsystem.healthinstitution.HealthInstitutionSingleton;
import com.healthsystem.notification.NotificationPanel;
import com.healthsystem.user.UserDAO;
import com.healthsystem.user.UserSingleton;
import com.healthsystem.util.WindowManager;
import com.healthsystem.util.component.Browser;
import java.util.List;
import com.pusher.client.Pusher;
import com.pusher.client.PusherOptions;
import com.pusher.client.channel.Channel;
import com.pusher.client.channel.SubscriptionEventListener;

/**
 *
 * @author Usuario
 */
public class HomePanel extends javax.swing.JPanel {

    private UserDAO userDAO = new UserDAO();

    /**
     * Creates new form HomePanel
     */
    private Pusher pusher;

    public HomePanel() {
        initComponents();

        welcomeMessageJLabel.setText(welcomeMessageJLabel.getText() + UserSingleton.getInstance().getUserName());
        enterpriseNameLabel.setText(HealthInstitutionSingleton.getInstance().getName());

        healthInstitutionsInvites = userDAO.getHealthInstitutions(UserSingleton.getInstance().getUserId(), "0");
        if (healthInstitutionsInvites.size() > 0) {
            notificationButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notification-new.png")));
        }

        if (UserSingleton.getInstance().isAdmin()) {
            browser1.run();
            browser2.runErrorGraph();

        }
        
        if (UserSingleton.getInstance().isPhysician()) {
            browser2.attendance();
            browser1.run();

        }

        PusherOptions options = new PusherOptions();
        options.setCluster("us2");
        pusher = new Pusher("", options);
        Channel channel = pusher.subscribe(UserSingleton.getInstance().getUserId());

        channel.bind("notification", new SubscriptionEventListener() {
            @Override
            public void onEvent(String channelName, String eventName, final String data) {

                if (data != null) {
                    try {
                        boolean ok = Boolean.parseBoolean(data);
                        if (ok) {
                            healthInstitutionsInvites = userDAO.getHealthInstitutions(UserSingleton.getInstance().getUserId(), "0");
                            if (healthInstitutionsInvites.size() > 0) {
                                notificationButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notification-new.png")));
                            }
                        }
                    } catch (Exception e) {

                    }
                }
            }
        });

        pusher.connect();

    }

    private List<HealthInstitutionModel> healthInstitutionsInvites;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        photoLabel = new javax.swing.JLabel();
        enterpriseNameLabel = new javax.swing.JLabel();
        welcomeMessageJLabel = new javax.swing.JLabel();
        notificationButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        homePanel = new javax.swing.JPanel();
        browser2 = new com.healthsystem.util.component.Browser();
        browser1 = new com.healthsystem.util.component.Browser();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(721, 506));
        setPreferredSize(new java.awt.Dimension(721, 506));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        photoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dashboard.png"))); // NOI18N

        enterpriseNameLabel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/healthsystem/home/Bundle"); // NOI18N
        enterpriseNameLabel.setText(bundle.getString("HomePanel.enterpriseNameLabel.text")); // NOI18N

        welcomeMessageJLabel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        welcomeMessageJLabel.setText(bundle.getString("HomePanel.welcomeMessageJLabel.text")); // NOI18N

        notificationButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notification.png"))); // NOI18N
        notificationButton.setToolTipText(bundle.getString("HomePanel.notificationButton.toolTipText")); // NOI18N
        notificationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notificationButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(photoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enterpriseNameLabel)
                    .addComponent(welcomeMessageJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(notificationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(notificationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(enterpriseNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(welcomeMessageJLabel)
                                .addGap(9, 9, 9)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setBorder(null);
        jScrollPane1.setMinimumSize(null);

        homePanel.setBackground(new java.awt.Color(255, 255, 255));
        homePanel.setLayout(new javax.swing.BoxLayout(homePanel, javax.swing.BoxLayout.LINE_AXIS));

        browser2.setBackground(new java.awt.Color(255, 255, 255));
        homePanel.add(browser2);

        browser1.setBackground(new java.awt.Color(255, 255, 255));
        browser1.setMinimumSize(null);
        browser1.setName(""); // NOI18N
        browser1.setPreferredSize(null);
        homePanel.add(browser1);

        jScrollPane1.setViewportView(homePanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void notificationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notificationButtonActionPerformed
        pusher.disconnect();
        NotificationPanel notificationPanel = new NotificationPanel();
        notificationPanel.setNotifications(healthInstitutionsInvites);
        notificationPanel.resetTable();
        WindowManager.changePanel(notificationPanel, this);

    }//GEN-LAST:event_notificationButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.healthsystem.util.component.Browser browser1;
    private com.healthsystem.util.component.Browser browser2;
    private javax.swing.JLabel enterpriseNameLabel;
    private javax.swing.JPanel homePanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton notificationButton;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JLabel welcomeMessageJLabel;
    // End of variables declaration//GEN-END:variables
}
