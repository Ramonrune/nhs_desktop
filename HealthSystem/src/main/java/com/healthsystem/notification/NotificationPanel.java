/*
 * Direitos reservados a Ramon Lacava Gutierrez Gonçales
 * ramonrune@gmail.com
 */
package com.healthsystem.notification;

import com.healthsystem.healthinstitution.*;
import com.healthsystem.home.HomePanel;
import com.healthsystem.home.HomeScreen;
import com.healthsystem.user.UserDAO;
import com.healthsystem.user.UserSingleton;
import com.healthsystem.util.dataprovider.CountryList;
import com.healthsystem.util.dataprovider.CountryModel;
import com.healthsystem.util.WindowManager;
import java.awt.Dimension;
import java.awt.Image;
import java.net.URL;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class NotificationPanel extends javax.swing.JPanel {

    private java.util.ResourceBundle i18n = java.util.ResourceBundle.getBundle("com/healthsystem/notification/Bundle"); // NOI18N

    private HealthInstitutionDAO healthInstitutionDAO = new HealthInstitutionDAO();
    private UserDAO userDAO = new UserDAO();

    public NotificationPanel() {
        initComponents();

        notificationTable.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            protected void setValue(Object value) {
                if (value instanceof ImageIcon) {
                    setIcon((ImageIcon) value);
                    setText("");
                } else {
                    setIcon(null);
                    super.setValue(value);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        notificationTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(721, 506));
        setPreferredSize(new java.awt.Dimension(721, 506));

        jScrollPane1.setMinimumSize(null);
        jScrollPane1.setPreferredSize(null);

        notificationTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        notificationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id instituição", "Imagem", "Titulo", "Aceitar", "Excluir"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        notificationTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        notificationTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                notificationTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(notificationTable);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/healthsystem/notification/Bundle"); // NOI18N
        jLabel1.setText(bundle.getString("NotificationPanel.jLabel1.text")); // NOI18N
        jLabel1.setToolTipText(bundle.getString("NotificationPanel.jLabel1.toolTipText")); // NOI18N

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/left-arrow (2).png"))); // NOI18N
        jButton1.setText(bundle.getString("NotificationPanel.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void notificationTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notificationTableMouseClicked

        if (notificationTable.getSelectedColumn() == 2) {
            String id = notificationTable.getModel().getValueAt(notificationTable.getSelectedRow(), 0).toString();

            if (healthInstitutionDAO.updateBind(id, UserSingleton.getInstance().getUserId())) {
                setNotifications(userDAO.getHealthInstitutions(UserSingleton.getInstance().getUserId(), "0"));

                JOptionPane.showMessageDialog(null, i18n.getString("NotificationPanel.accept.invite"));

            }
        }

        if (notificationTable.getSelectedColumn() == 3) {
            String id = notificationTable.getModel().getValueAt(notificationTable.getSelectedRow(), 0).toString();
            healthInstitutionDAO.deleteBind(id, UserSingleton.getInstance().getUserId());
            setNotifications(userDAO.getHealthInstitutions(UserSingleton.getInstance().getUserId(), "0"));

        }
    }//GEN-LAST:event_notificationTableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        HomePanel homePanel = new HomePanel();
        WindowManager.changePanel(homePanel, this);
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable notificationTable;
    // End of variables declaration//GEN-END:variables

    public void setHealthInstitutionList(List<HealthInstitutionModel> healthInstitutions) {

        notificationTable.removeColumn(notificationTable.getColumnModel().getColumn(0));
        notificationTable.setRowHeight(40);

    }

    private HomeScreen homeScreen;

    public void setHomeScreen(HomeScreen homeScreen, boolean visibility) {
        this.homeScreen = homeScreen;
        if (!visibility) {
            homeScreen.getMenuBarBase().setVisible(false);
            homeScreen.getMenuBarBase().updateUI();
        }
    }

    public void setNotifications(List<HealthInstitutionModel> healthInstitutionsInvites) {

        for (int i = 0; i <= notificationTable.getRowCount(); i++) {
            ((DefaultTableModel) notificationTable.getModel()).setNumRows(0);
        }
        notificationTable.updateUI();

        DefaultTableModel model = (DefaultTableModel) notificationTable.getModel();
        for (HealthInstitutionModel healthInstitutionModel : healthInstitutionsInvites) {

            model.addRow(new Object[]{
                healthInstitutionModel.getIdHealthInstitution(),
                new javax.swing.ImageIcon(getClass().getResource("/hospital.png")),
                healthInstitutionModel.getName() + " " + i18n.getString("NotificationPanel.invite"),
                new javax.swing.ImageIcon(getClass().getResource("/success.png")),
                new javax.swing.ImageIcon(getClass().getResource("/delete.png"))
            });

        }

    }

    public void resetTable() {
        notificationTable.setTableHeader(
                null);
        notificationTable.removeColumn(notificationTable.getColumnModel().getColumn(0));
        notificationTable.setRowHeight(
                50);
        notificationTable.setShowGrid(
                false);
        notificationTable.setIntercellSpacing(
                new Dimension(0, 0));
        notificationTable.getColumnModel().getColumn(0).setMaxWidth(50);
        notificationTable.getColumnModel().getColumn(1).setMinWidth(200);
        notificationTable.getColumnModel().getColumn(2).setMaxWidth(50);
        notificationTable.getColumnModel().getColumn(3).setMaxWidth(50);
    }
}
